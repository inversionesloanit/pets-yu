version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: pets-yu-db
    environment:
      POSTGRES_DB: petsyu_db
      POSTGRES_USER: petsyu
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petsyu -d petsyu_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API - usando Node.js oficial
  backend:
    image: node:18-alpine
    container_name: pets-yu-api
    working_dir: /app
    environment:
      DATABASE_URL: "postgresql://petsyu:${POSTGRES_PASSWORD:-password}@postgres:5432/petsyu_db?schema=public"
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: "7d"
      PORT: 3001
      NODE_ENV: "production"
      FRONTEND_URL: "${FRONTEND_URL:-http://localhost:8090}"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: >
      sh -c "
        npm install &&
        npm run build &&
        npm start
      "
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend - usando Nginx con archivos est√°ticos
  frontend:
    image: nginx:alpine
    container_name: pets-yu-web
    ports:
      - "8090:80"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
    driver: local

networks:
  pets-yu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16