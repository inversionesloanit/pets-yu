version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: pets-yu-db
    environment:
      POSTGRES_DB: petsyu_db
      POSTGRES_USER: petsyu
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petsyu -d petsyu_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API
  backend:
    image: pets-yu-backend:latest
    container_name: pets-yu-api
    environment:
      DATABASE_URL: "postgresql://petsyu:${POSTGRES_PASSWORD:-password}@postgres:5432/petsyu_db?schema=public"
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: "7d"
      PORT: 3001
      NODE_ENV: "production"
      FRONTEND_URL: "${FRONTEND_URL:-http://localhost:8090}"
      # Security settings
      RATE_LIMIT_WINDOW_MS: "900000"
      RATE_LIMIT_MAX_REQUESTS: "100"
      # Cache settings
      CACHE_TTL_PRODUCTS: "600000"
      CACHE_TTL_CATEGORIES: "1800000"
      CACHE_TTL_USERS: "900000"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - backend_logs:/app/logs
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend
  frontend:
    image: pets-yu-frontend:latest
    container_name: pets-yu-web
    environment:
      VITE_API_URL: "${API_URL:-http://localhost:3001/api}"
    ports:
      - "8090:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: pets-yu-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - pets-yu-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local

networks:
  pets-yu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
